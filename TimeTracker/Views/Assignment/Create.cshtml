@model TimeTracker.Models.Dto.AssignmentDto

@{
	ViewData["Title"] = "Create";
}

<h4>Assignment</h4>
<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Create">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group mb-3">
				@Html.DropDownListFor(x=>x.ContractId,@Model.ContractList,"Select a contract")
			</div>
			<div class="form-group mb-3">
				<label asp-for="CompanyId" class="control-label"></label>
				<input asp-for="CompanyId" class="form-control" />
				<span asp-validation-for="CompanyId" class="text-danger"></span>
			</div>
			<div class="form-group mb-3">
				<label asp-for="Description" class="control-label"></label>
				<input asp-for="Description" class="form-control" />
				<span asp-validation-for="Description" class="text-danger"></span>
			</div>
			<div class="form-group mb-3">
				<label asp-for="MinutesAvailable" class="control-label"></label>
				<input asp-for="MinutesAvailable" class="form-control" />
				<span asp-validation-for="MinutesAvailable" class="text-danger"></span>
			</div>
			<div class="form-group form-check mb-3">
				<label class="form-check-label">
					<input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
				</label>
			</div>
			<div class="row">
				<div class="col">
					<input type="submit" value="Create" class="btn btn-sm btn-primary" />
					<a asp-action="Index" class="btn btn-sm btn-secondary">Back to List</a>
				</div>
			</div>
		</form>
	</div>
</div>

<div>
	
</div>

@section Scripts {
    @{
	await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
